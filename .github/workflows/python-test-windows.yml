name: Test on Windows

on:
  push:
    branches: [ "master", "tests" ]
  pull_request:
    branches: [ "master", "tests" ]

jobs:
  test:

    strategy:
      matrix:
        os: [windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up PostGIS
        run: |
          Invoke-WebRequest -Uri "http://download.osgeo.org/postgis/windows/pg14/postgis-bundle-pg14x64-setup-3.4.1-1.exe" -OutFile "postgis-installer.exe"
          Start-Process "postgis-installer.exe" -ArgumentList "/S /D=C:\Program Files\PostgreSQL\14" -Wait -NoNewWindow
          & "C:\Program Files\PostgreSQL\14\bin\pg_ctl.exe" -D "C:\Program Files\PostgreSQL\14\data" start
          & "C:\Program Files\PostgreSQL\14\bin\psql.exe" -U postgres -c "CREATE DATABASE geodb;"
          & "C:\Program Files\PostgreSQL\14\bin\psql.exe" -U postgres -c "CREATE USER geodb_user WITH ENCRYPTED PASSWORD 'geodb_pass';"
          & "C:\Program Files\PostgreSQL\14\bin\psql.exe" -U postgres -c "GRANT ALL PRIVILEGES ON DATABASE geodb TO geodb_user;"
          & "C:\Program Files\PostgreSQL\14\bin\psql.exe" -U postgres -d geodb -c "CREATE EXTENSION postgis;"

      - name: Set up Tomcat/GeoServer
        run: |
          netsh advfirewall firewall add rule name="Allow Localhost 8080" dir=in action=allow protocol=TCP localport=8080
          
          curl -L https://dlcdn.apache.org/tomcat/tomcat-10/v10.1.23/bin/apache-tomcat-10.1.23-windows-x64.zip -o tomcat.zip
          Expand-Archive -Path tomcat.zip -DestinationPath "C:\"
          
          $directory = Get-ChildItem -Path "C:\" -Directory | Where-Object { $_.Name -like "*apache-tomcat*" } | Select-Object -First 1
          if ($directory) { Rename-Item -Path $directory.FullName -NewName "Tomcat" }

          dir C:\Tomcat
          curl -L https://sourceforge.net/projects/geoserver/files/GeoServer/2.25.0/geoserver-2.25.0-war.zip/download -o geoserver.zip
          Expand-Archive -Path geoserver.zip -DestinationPath "C:\GeoServer"
          cp C:\GeoServer\geoserver.war C:\Tomcat\webapps\geoserver.war
          dir C:\Tomcat\webapps
          
          $env:CATALINA_BASE = "C:\Tomcat"
          $env:CATALINA_HOME = "C:\Tomcat"
          $env:CATALINA_TMPDIR = "C:\Tomcat\temp"
          C:\Tomcat\bin\startup.bat
          
          $response = Invoke-WebRequest -Uri "http://localhost:8080"
          Write-Output $response.Content
          
          $response = Invoke-WebRequest -Uri "http://localhost:8080/geoserver"
          Write-Output $response.Content

        shell: pwsh

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install Miniconda
        run: |
          curl -O https://repo.anaconda.com/miniconda/Miniconda3-py39_4.10.3-Windows-x86_64.exe
          Start-Process -FilePath "Miniconda3-py39_4.10.3-Windows-x86_64.exe" -ArgumentList '/InstallationType=JustMe /RegisterPython=0 /S /D="%UserProfile%\Miniconda3"' -Wait -NoNewWindow
          & "$env:UserProfile\Miniconda3\Scripts\conda" init powershell
        shell: pwsh

      - name: Configure Conda environment
        run: |
          $env:PATH = "$env:UserProfile\Miniconda3;$env:UserProfile\Miniconda3\Scripts;$env:UserProfile\Miniconda3\Library\bin;$env:PATH"
          conda update conda -y
          conda create -n geospatial python=3.10 -y
          conda activate geospatial
          conda install -c conda-forge gdal>=3.4.1 -y
          python -m pip install --upgrade pip
          pip install -r requirements_dev.txt
        shell: pwsh

      - name: Run pytest
        run: |
          set DB_HOST=localhost
          conda activate geospatial
          pytest ./tests
