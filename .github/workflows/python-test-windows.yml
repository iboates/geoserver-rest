name: Test on Windows

on:
  push:
    branches: [ "master", "tests" ]
  pull_request:
    branches: [ "master", "tests" ]

jobs:
  test:

    strategy:
      matrix:
        os: [windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install Miniconda
        run: |
          curl -O https://repo.anaconda.com/miniconda/Miniconda3-py39_4.10.3-Windows-x86_64.exe
          Start-Process -FilePath "Miniconda3-py39_4.10.3-Windows-x86_64.exe" -ArgumentList '/InstallationType=JustMe /RegisterPython=0 /S /D="%UserProfile%\Miniconda3"' -Wait -NoNewWindow
          & "$env:UserProfile\Miniconda3\Scripts\conda" init powershell
        shell: pwsh

      - name: Configure Conda environment
        run: |
          $env:PATH = "$env:UserProfile\Miniconda3;$env:UserProfile\Miniconda3\Scripts;$env:UserProfile\Miniconda3\Library\bin;$env:PATH"
          conda update conda -y
          conda create -n geospatial python=3.10 -y
          conda activate geospatial
          conda install -c conda-forge gdal>=3.4.1 -y
          python -m pip install --upgrade pip
          pip install -r requirements_dev.txt
        shell: pwsh

      - name: Download PostgreSQL Installer
        run: |
          Invoke-WebRequest -Uri "https://get.enterprisedb.com/postgresql/postgresql-13.3-2-windows-x64.exe" -OutFile "postgresql-installer.exe"
        shell: pwsh

      - name: Install PostgreSQL
        run: |
          .\postgresql-installer.exe --mode unattended --unattendedmodeui none --superpassword "YourSuperPassword" --serverport 5432 --install_runtimes 1 --prefix "C:\Program Files\PostgreSQL\13"
          setx PATH "%PATH%;C:\Program Files\PostgreSQL\13\bin"

      - name: Setup Database and User
        run: |
          "C:\Program Files\PostgreSQL\13\bin\psql.exe" -U postgres -c "CREATE DATABASE geodb;"
          "C:\Program Files\PostgreSQL\13\bin\psql.exe" -U postgres -c "CREATE USER geodb_user WITH ENCRYPTED PASSWORD 'geodb_pass';"
          "C:\Program Files\PostgreSQL\13\bin\psql.exe" -U postgres -c "GRANT ALL PRIVILEGES ON DATABASE yourDatabaseName TO geodb_user;"
          "C:\Program Files\PostgreSQL\13\bin\psql.exe" -U postgres -d yourDatabaseName -c "CREATE EXTENSION postgis;"

      - name: Set up GeoServer
        run: |
          Invoke-WebRequest -Uri "https://sourceforge.net/projects/geoserver/files/GeoServer/2.18.2/geoserver-2.18.2-war.zip" -OutFile "geoserver.zip"
          Expand-Archive -Path geoserver.zip -DestinationPath "C:\GeoServer"
          java -jar "C:\GeoServer\webapps\geoserver\WEB-INF\lib\start.jar"
        shell: pwsh

      - name: Test on ${{ matrix.os }}
        run: |
          set DB_HOST=postgis
          docker compose -f tests/docker-compose.yaml up -d
          conda activate geospatial
          sleep 60  # Geoserver takes quite a long time to boot up and there is no healthcheck
          pytest ./tests
